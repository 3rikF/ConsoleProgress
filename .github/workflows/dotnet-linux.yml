name: .NET Linux Build & Test

env:
  # Replace with your solution name, i.e. MyWpfApp.sln.
  SOLUTION_NAME: "./ConsoleProgressBar/ConsoleProgressBar.sln"
  PROJECT_PATH: "./ConsoleProgressBar/ConsoleProgressBar/ConsoleProgressBar.csproj"

  # set consol column widht so a certain [TextFormatting]-test might not fail
  COLUMNS: 120

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: 'Build (Linux)'
    strategy:
      matrix:
        CONFIGURATION: [Debug, Release]

    # For a list of available runner types, refer to
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore $SOLUTION_NAME

    - name: Build
      run: dotnet build $SOLUTION_NAME --no-restore

  unit-tests:
    name: 'Unit Tests (Linux)'
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        CONFIGURATION: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore $SOLUTION_NAME

    - name: Test
      run: dotnet test $SOLUTION_NAME --verbosity normal
      #working-directory: ./ConsoleProgressBar


  stryker-tests:
    name: 'Mutation Testing (Stryker)'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'    # Match your project's version

      - name: Install Stryker
        run: dotnet tool install -g dotnet-stryker

      - name: Run Stryker Mutation Testing
        run: dotnet stryker

      - name: Upload Stryker HTML Report Folder
        uses: actions/upload-artifact@v4
        with:
          name: stryker-html-report
          path: |
            reports/mutation-report.html

          #reports/mutation/html/

  nuget-pack-and-publish:
    if: github.event_name == 'push'
    name: 'NuGet Pack and Publish'
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x' # Use latest LTS, adjust if your project uses a different version

    #- name: Restore dependencies
    #  run: dotnet restore $SOLUTION_NAME

    - name: Print DotNet NuGet Version
      run: dotnet nuget --version

    - name: Pack NuGet Package
      run: dotnet pack $PROJECT_PATH --configuration Release --output ./artifacts

    ## ERROR: Unable to process file command 'env' successfully. Invalid format 'nupkg'
    ## check use of if necessary: PACKAGE_VERSION=$(dotnet list package --include-transitive | grep '<YourPackageName>' | awk '{print $4}')
    #- name: Get package version
    #  id: get_version
    #  run: |
    #    PACKAGE_VERSION=$(ls ./artifacts | grep .nupkg | sed 's/.*\.//' | sed 's/\.nupkg$//')
    #    echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
    - name: DEBUG - Config / Endpoints
      run: dotnet nuget config get all

    - name: Publish NuGet Package
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
